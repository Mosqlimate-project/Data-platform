# Generated by Django 4.2.20 on 2025-04-22 16:24

from django.db import migrations, transaction


def populate_city_macro_health(apps, schema_editor):
    City = apps.get_model("vis", "City")
    GeoMacroSaude = apps.get_model("vis", "GeoMacroSaude")
    from django.conf import settings
    import os
    import json

    geocodes_file = os.path.join(
        settings.STATIC_ROOT, "data/geo/macro_health_geocodes.json"
    )

    with open(geocodes_file, "r") as f:
        geocodes = json.load(f)

    for macro_geocode, city_geocodes in geocodes.items():
        try:
            cities = City.objects.filter(geocode__in=city_geocodes)
            macro = GeoMacroSaude.objects.get(geocode=macro_geocode)
            with transaction.atomic():
                for city in cities:
                    city.macro_health = macro
                    city.save()
        except Exception as e:
            print(e)
            pass


class Migration(migrations.Migration):
    dependencies = [
        ("vis", "0016_city_macro_health"),
    ]

    operations = [
        migrations.RunPython(populate_city_macro_health),
    ]
