# Generated by Django 4.2.5 on 2024-03-08 21:56

import os
import geopandas as gpd
from django.conf import settings

from django.db import migrations

from shapely.geometry import Polygon, MultiPolygon
from django.contrib.gis.geos import GEOSGeometry


def populate_geo_macro_saude(apps, schema_editor):
    State = apps.get_model("vis", "State")
    GeoMacroSaude = apps.get_model("vis", "GeoMacroSaude")

    shapefile = os.path.join(
        settings.STATICFILES_DIRS[0], "data/geo/BR/shapefile_macro_saude.gpkg"
    )

    df = gpd.read_file(shapefile)

    for _, data in df.iterrows():
        if isinstance(data["geometry"], Polygon):
            data["geometry"] = MultiPolygon([data["geometry"]])

        GeoMacroSaude.objects.get_or_create(
            geocode=data["code_macro"],
            state=State.objects.get(pk=str(data["uf"])),
            geometry=GEOSGeometry(data["geometry"].wkt),
        )


class Migration(migrations.Migration):
    dependencies = [
        (
            "vis",
            "0007_alter_geocity_geometry_alter_geomacroregion_geometry_and_more",
        ),
    ]

    operations = [migrations.RunPython(populate_geo_macro_saude)]
