version: 1.8.1

groups:
  docker:
    env-file: .env
    targets:
      build:
        help: Build containers
        run: |
          sugar build --group $ENV

      start:
        help: Start all containers
        run: |
          sugar up --group $ENV --options "--no-start"
          sugar start --group $ENV

      stop:
        help: Start all containers
        run: |
          sugar stop --group $ENV

  django:
    targets:
      createsuperuser:
        args:
          email:
            help: Specify the email
            type: string
            required: True
          username:
            help: Specify the username
            type: string
            required: True
        help: Run `createsuperuser` inside container
        run: |
          sugar run --service django --cmd "python manage.py createsuperuser \
            --noinput --username {{ args.username }} --email {{ args.email }}"

      changepassword:
        args:
          username:
            help: Specify the username
            type: string
            required: True
        help: Run `changepassword <user>` inside container
        run: |
          sugar run --service django --cmd "python manage.py changepassword {{ args.username }}"

      migrations:
        help: Run `migrate` inside container
        env-file: .env
        run: |
          sugar run --service django --cmd "python manage.py makemigrations --no-input"
          sugar run --service django --cmd "python manage.py migrate --no-input"


      collectstatic:
        help: Run `collectstatic` inside container
        run: |
          sugar run --service django --cmd "python manage.py collectstatic --no-input"

      shell:
        help: Enters in Django Shell on container
        run: |
          sugar run --service django --cmd "python manage.py shell -i ipython"

      dbshell:
        help: Enters in Django Database shell on container
        run: |
          sugar run --service django --cmd "python manage.py dbshell"

      test:
        args:
          app:
            help: Specify the django app
            type: string
            required: True
        help: Run django test on an app inside container
        run: |
            sugar run --service django --cmd "python manage.py makemigrations {{ args.app }}"
            sugar run --service django --cmd "python manage.py migrate --database=default"
            sugar run --service django --cmd "python manage.py test -v 2 {{ args.app }}.tests"

  dev:
    targets:
      dotenv:
        help: Configure .env file
        run: |
          python contrib/scripts/do_dotenv.py

      psql-conf:
        help: Configure postgresq.conf file
        run: |
          python contrib/scripts/do_psqlconf.py

      redis-conf:
        help: Configure redis.conf file
        run: |
          python contrib/scripts/do_redisconf.py


  release:
    vars:
      app: |
        npx --yes \
          -p semantic-release \
          -p conventional-changelog-conventionalcommits \
          -p "@semantic-release/commit-analyzer" \
          -p "@semantic-release/release-notes-generator" \
          -p "@semantic-release/changelog" \
          -p "@semantic-release/exec" \
          -p "@semantic-release/github" \
          -p "@semantic-release/git" \
          -p "semantic-release-replace-plugin@1.2.7" \
          semantic-release

    targets:
      ci:
        help: run semantic release on CI
        run: |
          {{ vars.app }} --ci --branches main

      dry:
        help: run semantic release in dry-run mode
        run: |
          {{ vars.app }} --dry-run --branches main
